library(devtools)
library(reshape2)
library(ComplexHeatmap)
library(circlize)
library(magick)
library(RColorBrewer)
library(UpSetR)
require(DOSE)
library(dplyr)
library(Seurat)
library(data.table)
library(cowplot)
library(ggplot2)
library(patchwork)
library(pheatmap)
library(clusterProfiler)
library(msigdbr)
require(remotes)
library(europepmc)
set.seed(123)
msig__H= msigdbr::msigdbr(species = "Homo sapiens", category = "H") #hallmark gene sets
setwd("/home/kasef/AKI-to-CKD_human-mouse/src/clusterprofiler_heatmap")
msig__C2 = msigdbr::msigdbr(species = "Homo sapiens", category = "C2") #curated gene sets
msig__C5 = msigdbr::msigdbr(species = "Homo sapiens", category = "C5") #ontologygene sets
msig_CP_BioCarta = data.frame(msig__C2$gs_name[msig__C2$gs_subcat %in% c("CP:BIOCARTA")], msig__C2$gene_symbol[msig__C2$gs_subcat %in% c("CP:BIOCARTA")])
msig_CP_KEGG = data.frame(msig__C2$gs_name[msig__C2$gs_subcat %in% c("CP:KEGG")], msig__C2$gene_symbol[msig__C2$gs_subcat %in% c("CP:KEGG")])
msig_CP_PID = data.frame(msig__C2$gs_name[which(msig__C2$gs_subcat == "CP:PID")], msig__C2$gene_symbol[which(msig__C2$gs_subcat == "CP:PID")])
msig_CP_Reactome = data.frame(msig__C2$gs_name[msig__C2$gs_subcat %in% c("CP:REACTOME")], msig__C2$gene_symbol[msig__C2$gs_subcat %in% c("CP:REACTOME")])
msig_CP_WikiPathways = data.frame(msig__C2$gs_name[msig__C2$gs_subcat %in% c("CP:WIKIPATHWAYS")], msig__C2$gene_symbol[msig__C2$gs_subcat %in% c("CP:WIKIPATHWAYS")])
msig_GO_BP = data.frame(msig__C5$gs_name[msig__C5$gs_subcat %in% c("GO:BP")], msig__C5$gene_symbol[msig__C5$gs_subcat %in% c("GO:BP")])
msig_hallmark = data.frame(msig__H$gs_name, msig__H$gene_symbol)
#changing columnames
colnames(msig_CP_BioCarta) <- c('pathway', 'genes')
colnames(msig_CP_KEGG) <- c("pathway", "genes")
colnames(msig_CP_PID) <- c("pathway", "genes")
colnames(msig_CP_Reactome) <- c("pathway", "genes")
colnames(msig_CP_WikiPathways) <- c("pathway", "genes")
colnames(msig_GO_BP) <- c("pathway", "genes")
colnames(msig_hallmark) <- c("pathway", "genes")
#combining columns
msig_combined_gene_sets <- rbind(msig_CP_BioCarta, msig_CP_KEGG, msig_CP_PID, msig_CP_Reactome, msig_CP_WikiPathways, msig_GO_BP, msig_hallmark)
# reading .csv-files
human_hinze = read.csv("Hinze__human.csv", header=T)
human_lake = read.csv("Lake__human.csv", header=T)
human_abedini = read.csv("Abedini__human.csv")
human_abedini = read.csv("Abedini__human.csv")
mouse_balzer = read.csv("Balzer__mouse__human_genenames.csv", header=T)
mouse_doke = read.csv("Doke__mouse__human_genenames.csv", header=T)
mouse_kirita = read.csv("Kirita__mouse__human_genenames.csv", header=T)
#remove column mouse "gene"
#mouse_balzer_3groups$gene <- NULL   # short alternative to subset()
mouse_balzer$gene <- NULL   # short alternative to subset()
mouse_doke$gene <- NULL   # short alternative to subset()
mouse_kirita$gene <- NULL   # short alternative to subset()
# making sure columnnames are matching
#names(mouse_balzer_3groups)[names(mouse_balzer_3groups) == "HGNC.symbol"] <- "gene"
names(mouse_balzer)[names(mouse_balzer) == "HGNC.symbol"] <- "gene"
names(mouse_doke)[names(mouse_doke) == "HGNC.symbol"] <- "gene"
names(mouse_kirita)[names(mouse_kirita) == "HGNC.symbol"] <- "gene"
names(human_abedini)[names(human_abedini) == "X"] <- "gene"
#names(mouse_balzer_3groups)[names(mouse_balzer_3groups) == "avg_logFC"] <- "avg_log2FC"
names(mouse_balzer)[names(mouse_balzer) == "avg_logFC"] <- "avg_log2FC"
# mouse Balzer 7 groups
mouse_balzer_Control <- subset(mouse_balzer, cluster=="Control")
mouse_balzer_Control <- subset(mouse_balzer_Control, avg_log2FC > 0)
mouse_balzer_Control <- subset(mouse_balzer_Control, p_val_adj < 0.05)
mouse_balzer_Control <- mouse_balzer_Control[order(mouse_balzer_Control$avg_log2FC, decreasing=T),]
mouse_balzer_Control %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_Control
mouse_balzer_Control <- mouse_balzer_Control$gene
mouse_balzer_AKI_1d <- subset(mouse_balzer, cluster=="IRI_short_1")
mouse_balzer_AKI_1d <- subset(mouse_balzer_AKI_1d, avg_log2FC > 0)
mouse_balzer_AKI_1d <- subset(mouse_balzer_AKI_1d, p_val_adj < 0.05)
mouse_balzer_AKI_1d <- mouse_balzer_AKI_1d[order(mouse_balzer_AKI_1d$avg_log2FC, decreasing=T),]
mouse_balzer_AKI_1d %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_AKI_1d
mouse_balzer_AKI_1d <- mouse_balzer_AKI_1d$gene
mouse_balzer_AKI_3d <- subset(mouse_balzer, cluster=="IRI_short_3")
mouse_balzer_AKI_3d <- subset(mouse_balzer_AKI_3d, avg_log2FC > 0)
mouse_balzer_AKI_3d <- subset(mouse_balzer_AKI_3d, p_val_adj < 0.05)
mouse_balzer_AKI_3d <- mouse_balzer_AKI_3d[order(mouse_balzer_AKI_3d$avg_log2FC, decreasing=T),]
mouse_balzer_AKI_3d %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_AKI_3d
mouse_balzer_AKI_3d <- mouse_balzer_AKI_3d$gene
mouse_balzer_AKI_14d <- subset(mouse_balzer, cluster=="IRI_short_14")
mouse_balzer_AKI_14d <- subset(mouse_balzer_AKI_14d, avg_log2FC > 0)
mouse_balzer_AKI_14d <- subset(mouse_balzer_AKI_14d, p_val_adj < 0.05)
mouse_balzer_AKI_14d <- mouse_balzer_AKI_14d[order(mouse_balzer_AKI_14d$avg_log2FC, decreasing=T),]
mouse_balzer_AKI_14d %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_AKI_14d
mouse_balzer_AKI_14d <- mouse_balzer_AKI_14d$gene
mouse_balzer_CKD_1d <- subset(mouse_balzer, cluster=="IRI_long_1")
mouse_balzer_CKD_1d <- subset(mouse_balzer_CKD_1d, avg_log2FC > 0)
mouse_balzer_CKD_1d <- subset(mouse_balzer_CKD_1d, p_val_adj < 0.05)
mouse_balzer_CKD_1d <- mouse_balzer_CKD_1d[order(mouse_balzer_CKD_1d$avg_log2FC, decreasing=T),]
mouse_balzer_CKD_1d %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_CKD_1d
mouse_balzer_CKD_1d <- mouse_balzer_CKD_1d$gene
mouse_balzer_CKD_3d <- subset(mouse_balzer, cluster=="IRI_long_3")
mouse_balzer_CKD_3d <- subset(mouse_balzer_CKD_3d, avg_log2FC > 0)
mouse_balzer_CKD_3d <- subset(mouse_balzer_CKD_3d, p_val_adj < 0.05)
mouse_balzer_CKD_3d <- mouse_balzer_CKD_3d[order(mouse_balzer_CKD_3d$avg_log2FC, decreasing=T),]
mouse_balzer_CKD_3d %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_CKD_3d
mouse_balzer_CKD_3d <- mouse_balzer_CKD_3d$gene
mouse_balzer_CKD_14d <- subset(mouse_balzer, cluster=="IRI_long_14")
mouse_balzer_CKD_14d <- subset(mouse_balzer_CKD_14d, avg_log2FC > 0)
mouse_balzer_CKD_14d <- subset(mouse_balzer_CKD_14d, p_val_adj < 0.05)
mouse_balzer_CKD_14d <- mouse_balzer_CKD_14d[order(mouse_balzer_CKD_14d$avg_log2FC, decreasing=T),]
mouse_balzer_CKD_14d %>% top_n(n = 100, wt = avg_log2FC) -> mouse_balzer_CKD_14d
mouse_balzer_CKD_14d <- mouse_balzer_CKD_14d$gene
mouse_balzer <- list(mouse_balzer_Control=mouse_balzer_Control,
mouse_balzer_AKI_1d=mouse_balzer_AKI_1d,
mouse_balzer_AKI_3d=mouse_balzer_AKI_3d,
mouse_balzer_AKI_14d=mouse_balzer_AKI_14d,
mouse_balzer_CKD_1d=mouse_balzer_CKD_1d,
mouse_balzer_CKD_3d=mouse_balzer_CKD_3d,
mouse_balzer_CKD_14d=mouse_balzer_CKD_14d)
# mouse Doke
mouse_doke_Control <- subset(mouse_doke, cluster=="Control")
mouse_doke_Control <- subset(mouse_doke_Control, avg_log2FC > 0)
mouse_doke_Control <- subset(mouse_doke_Control, p_val_adj < 0.05)
mouse_doke_Control <- mouse_doke_Control[order(mouse_doke_Control$avg_log2FC, decreasing=T),]
mouse_doke_Control %>% top_n(n = 100, wt = avg_log2FC) -> mouse_doke_Control
mouse_doke_Control <- mouse_doke_Control$gene
mouse_doke_UUO <- subset(mouse_doke, cluster=="UUO")
mouse_doke_UUO <- subset(mouse_doke_UUO, avg_log2FC > 0)
mouse_doke_UUO <- subset(mouse_doke_UUO, p_val_adj < 0.05)
mouse_doke_UUO <- mouse_doke_UUO[order(mouse_doke_UUO$avg_log2FC, decreasing=T),]
mouse_doke_UUO %>% top_n(n = 100, wt = avg_log2FC) -> mouse_doke_UUO
mouse_doke_UUO <- mouse_doke_UUO$gene
mouse_doke <- list(mouse_doke_Control=mouse_doke_Control,
mouse_doke_UUO=mouse_doke_UUO)
# mouse Kirita
mouse_kirita_Control <- subset(mouse_kirita, cluster=="Control")
mouse_kirita_Control <- subset(mouse_kirita_Control, avg_log2FC > 0)
mouse_kirita_Control <- subset(mouse_kirita_Control, p_val_adj < 0.05)
mouse_kirita_Control <- mouse_kirita_Control[order(mouse_kirita_Control$avg_log2FC, decreasing=T),]
mouse_kirita_Control %>% top_n(n = 100, wt = avg_log2FC) -> mouse_kirita_Control
mouse_kirita_Control <- mouse_kirita_Control$gene
mouse_kirita_4hours <- subset(mouse_kirita, cluster=="4hours")
mouse_kirita_4hours <- subset(mouse_kirita_4hours, avg_log2FC > 0)
mouse_kirita_4hours <- subset(mouse_kirita_4hours, p_val_adj < 0.05)
mouse_kirita_4hours <- mouse_kirita_4hours[order(mouse_kirita_4hours$avg_log2FC, decreasing=T),]
mouse_kirita_4hours %>% top_n(n = 100, wt = avg_log2FC) -> mouse_kirita_4hours
mouse_kirita_4hours <- mouse_kirita_4hours$gene
mouse_kirita_12hours <- subset(mouse_kirita, cluster=="12hours")
mouse_kirita_12hours <- subset(mouse_kirita_12hours, avg_log2FC > 0)
mouse_kirita_12hours <- subset(mouse_kirita_12hours, p_val_adj < 0.05)
mouse_kirita_12hours <- mouse_kirita_12hours[order(mouse_kirita_12hours$avg_log2FC, decreasing=T),]
mouse_kirita_12hours %>% top_n(n = 100, wt = avg_log2FC) -> mouse_kirita_12hours
mouse_kirita_12hours <- mouse_kirita_12hours$gene
mouse_kirita <- list(mouse_kirita_Control=mouse_kirita_Control,
mouse_kirita_4hours=mouse_kirita_4hours,
mouse_kirita_12hours=mouse_kirita_12hours
#                             ,
#                            mouse_kirita_2d=mouse_kirita_2d,
#                           mouse_kirita_14d=mouse_kirita_14d,
#                          mouse_kirita_6weeks=mouse_kirita_6weeks
)
# hinze 2 groups
human_hinze_Control <- subset(human_hinze, cluster=="Control")
human_hinze_Control <- subset(human_hinze_Control, avg_log2FC > 0)
human_hinze_Control <- subset(human_hinze_Control, p_val_adj < 0.05)
human_hinze_Control <- human_hinze_Control[order(human_hinze_Control$avg_log2FC, decreasing=T),]
human_hinze_Control %>% top_n(n = 100, wt = avg_log2FC) -> human_hinze_Control
human_hinze_Control <- human_hinze_Control$gene
human_hinze_AKI <- subset(human_hinze, cluster=="AKI")
human_hinze_AKI <- subset(human_hinze_AKI, avg_log2FC > 0)
human_hinze_AKI <- subset(human_hinze_AKI, p_val_adj < 0.05)
human_hinze_AKI <- human_hinze_AKI[order(human_hinze_AKI$avg_log2FC, decreasing=T),]
human_hinze_AKI %>% top_n(n = 100, wt = avg_log2FC) -> human_hinze_AKI
human_hinze_AKI <- human_hinze_AKI$gene
human_hinze <- list(human_hinze_Control=human_hinze_Control,
human_hinze_AKI=human_hinze_AKI)
# lake 3 groups
human_lake_LD <- subset(human_lake, cluster=="LD")
human_lake_LD <- subset(human_lake_LD, avg_log2FC > 0)
human_lake_LD <- subset(human_lake_LD, p_val_adj < 0.05)
human_lake_LD <- human_lake_LD[order(human_lake_LD$avg_log2FC, decreasing=T),]
human_lake_LD %>% top_n(n = 100, wt = avg_log2FC) -> human_lake_LD
human_lake_LD <- human_lake_LD$gene
human_lake_AKI <- subset(human_lake, cluster=="AKI")
human_lake_AKI <- subset(human_lake_AKI, avg_log2FC > 0)
human_lake_AKI <- subset(human_lake_AKI, p_val_adj < 0.05)
human_lake_AKI <- human_lake_AKI[order(human_lake_AKI$avg_log2FC, decreasing=T),]
human_lake_AKI %>% top_n(n = 100, wt = avg_log2FC) -> human_lake_AKI
human_lake_AKI <- human_lake_AKI$gene
human_lake_CKD <- subset(human_lake, cluster=="HCKD")
human_lake_CKD <- subset(human_lake_CKD, avg_log2FC > 0)
human_lake_CKD <- subset(human_lake_CKD, p_val_adj < 0.05)
human_lake_CKD <- human_lake_CKD[order(human_lake_CKD$avg_log2FC, decreasing=T),]
human_lake_CKD %>% top_n(n = 100, wt = avg_log2FC) -> human_lake_CKD
human_lake_CKD <- human_lake_CKD$gene
human_lake <- list(human_lake_LD=human_lake_LD,
human_lake_AKI=human_lake_AKI,
human_lake_CKD=human_lake_CKD)
#abedini 2 groups
human_abedini_Control<-subset(human_abedini, avg_log2FC>0)
human_abedini_Control<-subset(human_abedini_Control, p_val<0.05)
human_abedini_Control <- human_abedini_Control[order(human_abedini_Control$avg_log2FC, decreasing=T),]
human_abedini_Control %>% top_n(n = 100, wt = avg_log2FC) -> human_abedini_Control
human_abedini_Control <- human_abedini_Control$gene
human_abedini_CKD<-subset(human_abedini, avg_log2FC<0)
human_abedini_CKD<-subset(human_abedini_CKD, p_val<0.05)
human_abedini_CKD <- human_abedini_CKD[order(human_abedini_CKD$avg_log2FC, decreasing=F),]
human_abedini_CKD %>% top_n(n = -100, wt = avg_log2FC) -> human_abedini_CKD
human_abedini_CKD <- human_abedini_CKD$gene
human_abedini <- list(human_abedini_Control=human_abedini_Control,
human_abedini_CKD=human_abedini_CKD)
# prepare list for Clusterprofiler
mice_x_human <- list(m_kirita_Control=mouse_kirita_Control,
h_hinze_Control=human_hinze_Control,
h_lake_LD=human_lake_LD,
m_balzer_Control=mouse_balzer_Control,
m_doke_Control=mouse_doke_Control,
h_abedini_Control=human_abedini_Control,
m_balzer_AKI_14d=mouse_balzer_AKI_14d, #7 Control
m_kirita_4hours=mouse_kirita_4hours,
m_kirita_12hours=mouse_kirita_12hours,
m_balzer_AKI_1d=mouse_balzer_AKI_1d,
h_lake_AKI=human_lake_AKI,
h_hinze_AKI=human_hinze_AKI,
m_balzer_AKI_3d=mouse_balzer_AKI_3d, #6 AKI
h_abedini_CKD=human_abedini_CKD,
m_balzer_CKD_3d=mouse_balzer_CKD_3d,
h_lake_CKD=human_lake_CKD,
m_doke_UUO=mouse_doke_UUO,
m_balzer_CKD_1d=mouse_balzer_CKD_1d,
m_balzer_CKD_14d=mouse_balzer_CKD_14d) #66 CKD
mice_x_human <- list(m_kirita_Control=mouse_kirita_Control,
h_hinze_Control=human_hinze_Control,
h_lake_LD=human_lake_LD,
m_balzer_Control=mouse_balzer_Control,
m_doke_Control=mouse_doke_Control,
h_abedini_Control=human_abedini_Control,
m_balzer_AKI_14d=mouse_balzer_AKI_14d, #7 Control
m_kirita_4hours=mouse_kirita_4hours,
m_kirita_12hours=mouse_kirita_12hours,
m_balzer_AKI_1d=mouse_balzer_AKI_1d,
h_lake_AKI=human_lake_AKI,
h_hinze_AKI=human_hinze_AKI,
m_balzer_AKI_3d=mouse_balzer_AKI_3d, #6 AKI
h_abedini_CKD=human_abedini_CKD,
m_balzer_CKD_3d=mouse_balzer_CKD_3d,
h_lake_CKD=human_lake_CKD,
m_doke_UUO=mouse_doke_UUO,
m_balzer_CKD_1d=mouse_balzer_CKD_1d,
m_balzer_CKD_14d=mouse_balzer_CKD_14d) #6 CKD
#calculate enrichment for all clusters at once
cp_mice_x_human = clusterProfiler::compareCluster(geneCluster = mice_x_human,
fun = "enricher",
TERM2GENE = msig_combined_gene_sets)
cp_mice_x_human
#---heatmap-------------------------------------------------------------------
#filter results by q-value
qvalue_cutoff = 0.05
cp_mice_x_human@compareClusterResult = cp_mice_x_human@compareClusterResult[which(cp_mice_x_human@compareClusterResult$qvalue < qvalue_cutoff),]
#reorganize the qvalue result in matrix form, single cell clusters in columns, pathways in rows
cp_mice_x_human_mat = xtabs(qvalue ~ ID + Cluster, data = cp_mice_x_human@compareClusterResult)
#transform q-value so that low values (highly significant) have higher numbers
cp_mice_x_human_mat = -log10(cp_mice_x_human_mat)
cp_mice_x_human_mat[is.infinite(cp_mice_x_human_mat)] = 0
#top5 per cluster
test_mice_x_human <- data.frame(cp_mice_x_human_mat) #43.491   3
subset_mouse_kirita_Control = subset(test_mice_x_human, Cluster == "m_kirita_Control")
subset_mouse_kirita_Control %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_kirita_Control #5   3
subset_mouse_kirita_4hours = subset(test_mice_x_human, Cluster == "m_kirita_4hours")
subset_mouse_kirita_4hours %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_kirita_4hours #5   3
subset_mouse_kirita_12hours = subset(test_mice_x_human, Cluster == "m_kirita_12hours")
subset_mouse_kirita_12hours %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_kirita_12hours #5   3
subset_mouse_doke_Control = subset(test_mice_x_human, Cluster == "m_doke_Control")
subset_mouse_doke_Control %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_doke_Control #5   3
subset_mouse_doke_UUO = subset(test_mice_x_human, Cluster == "m_doke_UUO")
subset_mouse_doke_UUO %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_doke_UUO #5   3
subset_mouse_balzer_Control = subset(test_mice_x_human, Cluster == "m_balzer_Control")
subset_mouse_balzer_Control %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_Control #5   3
subset_mouse_balzer_AKI_1d = subset(test_mice_x_human, Cluster == "m_balzer_AKI_1d")
subset_mouse_balzer_AKI_1d %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_AKI_1d #7   3
subset_mouse_balzer_AKI_3d = subset(test_mice_x_human, Cluster == "m_balzer_AKI_3d")
subset_mouse_balzer_AKI_3d %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_AKI_3d #7   3
subset_mouse_balzer_AKI_14d = subset(test_mice_x_human, Cluster == "m_balzer_AKI_14d")
subset_mouse_balzer_AKI_14d %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_AKI_14d #7   3
subset_mouse_balzer_CKD_1d = subset(test_mice_x_human, Cluster == "m_balzer_CKD_1d")
subset_mouse_balzer_CKD_1d %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_CKD_1d #7   3
subset_mouse_balzer_CKD_3d = subset(test_mice_x_human, Cluster == "m_balzer_CKD_3d")
subset_mouse_balzer_CKD_3d %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_CKD_3d #7   3
subset_mouse_balzer_CKD_14d = subset(test_mice_x_human, Cluster == "m_balzer_CKD_14d")
subset_mouse_balzer_CKD_14d %>% top_n(n = 5, wt = Freq) -> topSOI_mouse_balzer_CKD_14d #7   3
subset_human_lake_Control = subset(test_mice_x_human, Cluster == "h_lake_LD")
subset_human_lake_Control %>% top_n(n = 5, wt = Freq) -> topSOI_human_lake_LD #5   3
subset_human_lake_AKI = subset(test_mice_x_human, Cluster == "h_lake_AKI")
subset_human_lake_AKI %>% top_n(n = 5, wt = Freq) -> topSOI_human_lake_AKI #5   3
subset_human_lake_CKD = subset(test_mice_x_human, Cluster == "h_lake_CKD")
subset_human_lake_CKD %>% top_n(n = 5, wt = Freq) -> topSOI_human_lake_CKD #5   3
subset_human_hinze_Control = subset(test_mice_x_human, Cluster == "h_hinze_Control")
subset_human_hinze_Control %>% top_n(n = 5, wt = Freq) -> topSOI_human_hinze_Control #5   3
subset_human_hinze_AKI = subset(test_mice_x_human, Cluster == "h_hinze_AKI")
subset_human_hinze_AKI %>%top_n(n = 5, wt = Freq) -> topSOI_human_hinze_AKI #5   3
subset_human_abedini_Control = subset(test_mice_x_human, cluster= "human_abedini_Control")
subset_human_abedini_Control %>% top_n(n=5, wt=Freq) -> topSOI_human_abedini_Control #5   3
subset_human_abedini_CKD<-subset(test_mice_x_human, cluster="human_abedini_CKD")
subset_human_abedini_CKD %>% top_n(n=5, wt=Freq) -> topSOI_human_abedini_CKD #5   3
topSOI_all <- rbind(topSOI_human_hinze_Control, topSOI_mouse_kirita_Control,
topSOI_mouse_doke_Control, topSOI_mouse_balzer_Control,
topSOI_human_lake_LD, topSOI_mouse_balzer_AKI_14d,
topSOI_mouse_kirita_4hours, topSOI_mouse_kirita_12hours,
topSOI_mouse_balzer_AKI_1d, topSOI_mouse_balzer_AKI_3d,
topSOI_human_lake_AKI, topSOI_human_hinze_AKI,
topSOI_mouse_balzer_CKD_1d, topSOI_mouse_balzer_CKD_3d,
topSOI_mouse_balzer_CKD_14d, topSOI_human_lake_CKD, topSOI_mouse_doke_UUO,
topSOI_human_abedini_Control, topSOI_human_abedini_CKD)
#subset cp_mice_x_human_mat to these top5 per cluster
cp_mice_x_human_mat <- cp_mice_x_human_mat[unique(topSOI_all$ID),]
#any q-value lower than 10e-4 is clamped to produce a more readable heatmap
cp_mice_x_human_mat[cp_mice_x_human_mat > 6] = 6
dim(cp_mice_x_human_mat) #58   19
#---color cols by single-cell clusters----
cp_mice_x_human_mat2 <- cp_mice_x_human_mat[rownames(cp_mice_x_human_mat)[order(rownames(cp_mice_x_human_mat))],]
cluster_colors <- c("#336600","#336600", "#336600", "#336600",
"#336600", "#336600", "yellow",#7 Control
"#FF0000", "#FF0000", "#FF0000",
"#FF0000", "#FF0000", "#FF0000", #6 aki
"#660000", "#660000", "#660000",
"#660000", "#660000", "#660000") #6 ckd
names(cluster_colors) <- c("Control", "Control", "Control", "Control",
"Control", "Control", "AKI recovered",  #7
"AKI", "AKI", "AKI",
"AKI", "AKI", "AKI", #6
"CKD / severe AKI", "CKD / severe AKI", "CKD / severe AKI",
"CKD / severe AKI", "CKD / severe AKI", "CKD / severe AKI") #6
species_colors <- c("#F8C471","#85C1E9", "#85C1E9", "#F8C471",
"#F8C471", "#85C1E9", "#F8C471",#7 Control
"#F8C471", "#F8C471", "#F8C471",
"#85C1E9", "#85C1E9", "#F8C471", #6 aki
"#85C1E9", "#F8C471", "#85C1E9",
"#F8C471", "#F8C471", "#F8C471") #6 ckd
names(species_colors) <- c("mouse", "human", "human", "mouse",
"mouse", "human", "mouse",  #7
"mouse", "mouse", "mouse",
"human", "human", "mouse", #6
"human", "mouse", "human",
"mouse", "mouse", "mouse") #6
column_ha_cluster <- HeatmapAnnotation(
Data_set = names(cluster_colors),
col = list(Data_set = cluster_colors),
simple_anno_size = unit(5, "mm"),
annotation_name_gp = gpar(fontsize = 20),
annotation_name_side = "left",
show_annotation_name=FALSE,
show_legend = TRUE,
annotation_legend_param = list(
Data_set = list(
title_position= "topleft",
title_gp = gpar(fontsize = 20,
fontface = "bold"),
labels_gp = gpar(fontsize = 20))))
column_ha_species <- HeatmapAnnotation(
Species = names(species_colors),
col = list(Species=species_colors),
simple_anno_size = unit(5, "mm"),
annotation_name_gp = gpar(fontsize = 20),
annotation_name_side = "left",
show_annotation_name=FALSE,
show_legend = TRUE,
annotation_legend_param = list(
Species = list(
title_position= "topleft",
title_gp = gpar(fontsize = 20,
fontface = "bold"),
labels_gp = gpar(fontsize = 20))))
# rename rows (pathways) with new names defined in "new_rownames.csv":
new_rownames<-read.csv("new_rownames.csv", header=T)
# charakter vektor of rownames(cp_mice_x_human_mat2)
rownames_original<-rownames(cp_mice_x_human_mat2)
# df[match(target, df$name),]
new_rownames<-new_rownames[match(rownames_original, new_rownames$ID),]
# df2 <- subset(df, select = -c(id, name, chapters))
new_rownames$ID<-NULL   # short alternative to subset()
# rename column
names(new_rownames)[names(new_rownames) == "new_rownames"] <- "ID"
# replacing rownames by new rownames (in charakter vektor)
rownames(cp_mice_x_human_mat2) <- new_rownames$ID
# remove rows (pathways), that are similiar to others:
cp_mice_x_human_mat3<-cp_mice_x_human_mat2[
-c(1,4:6,8,10,14:15,17:18,20:22,24,32:34,36:37,40,42,44:45,48:50,55,57),]
# rename columns
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_abedini_Control"] <- "Abedini"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_abedini_CKD"] <- "Abedini"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_hinze_Control"] <- "Hinze"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_hinze_AKI"] <- "Hinze"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_lake_LD"] <- "Lake"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_lake_AKI"] <- "Lake"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "h_lake_CKD"] <- "Lake"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_doke_Control"] <- "Doke"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_doke_UUO"] <- "Doke"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_kirita_Control"] <- "Kirita"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_kirita_4hours"] <- "Kirita_4hrs"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_kirita_12hours"] <- "Kirita_12hrs"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_Control"] <- "Balzer"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_AKI_1d"] <- "Balzer_1d"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_AKI_3d"] <- "Balzer_3d"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_AKI_14d"] <- "Balzer_14d"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_CKD_1d"] <- "Balzer_1d"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_CKD_3d"] <- "Balzer_3d"
colnames(cp_mice_x_human_mat3)[colnames(cp_mice_x_human_mat3) == "m_balzer_CKD_14d"] <- "Balzer_14d"
heatmap<-ComplexHeatmap::Heatmap(
cp_mice_x_human_mat3, "-log10(q)",
na_col="white",
col= colorRampPalette(c("white", "#241346"))(n=200),
cluster_rows=F,
row_order = c(13,16,21,14,8,12,28,27,9,12,30,3:4,6,18,17,5,19,22,24,11,2,26,7,20,15,29,23,1,10),
width= unit(30, "cm"), height=unit(30,"cm"),
row_names_gp=gpar(fontsize=28),
cluster_columns= F,
column_order = c(1:2,5,4,6,3,7, #Control
8:13, #aki
17,14,15,18,19,16), #ckd
top_annotation = column_ha_cluster,
bottom_annotation= column_ha_species,
show_heatmap_legend = T,
column_names_gp=gpar(fontsize=28),
column_names_rot = 45,
use_raster = TRUE,
heatmap_legend_param = list(title = "-log10(q)",
title_gp = gpar(col = "black", fontsize = 20, fontface="bold"),
legend_height = unit(16, "cm"),
legend_width  = unit(16,"cm"),
title_position = "topleft",
direction = "vertical",
labels_gp = gpar(fontsize= 20, fontface = "bold")))
heatmap=draw(heatmap, heatmap_legend_side = "left", annotation_legend_side = "left")
pdf('HEATMAP.pdf', width=26, height=16)
heatmap
dev.off()
mouse_balzer3 <- read.csv("Balzer__mouse.csv", header=TRUE)
mouse_balzer <- read.csv("Balzer__mouse.csv", header=TRUE)
mouse_balzer <- read.csv("Balzer__mouse.csv", header=TRUE)
mouse_doke <- read.csv("Doke__mouse.csv", header=TRUE)
mouse_kirita <- read.csv("Kirita__mouse.csv", header=TRUE)
#see different datasets available within a biomaRt:
mart = useMart('ensembl', host = "https://dec2021.archive.ensembl.org")
library(devtools)
library(reshape2)
library(ComplexHeatmap)
library(circlize)
library(magick)
library(RColorBrewer)
library(UpSetR)
require(DOSE)
library(dplyr)
library(Seurat)
library(data.table)
library(cowplot)
library(ggplot2)
library(patchwork)
library(pheatmap)
library(clusterProfiler)
library(msigdbr)
require(remotes)
library(europepmc)
require("biomaRt")
set.seed(123)
mouse_balzer <- read.csv("Balzer__mouse.csv", header=TRUE)
mouse_doke <- read.csv("Doke__mouse.csv", header=TRUE)
mouse_kirita <- read.csv("Kirita__mouse.csv", header=TRUE)
mouse_doke <- read.csv("Doke__mouse.csv", header=TRUE)
mouse_balzer <- read.csv("Balzer__mouse.csv", header=TRUE)
mouse_doke <- read.csv("Doke__mouse.csv", header=TRUE)
mouse_kirita <- read.csv("Kirita__mouse.csv", header=TRUE)
#see different datasets available within a biomaRt:
mart = useMart('ensembl', host = "https://dec2021.archive.ensembl.org")
??useMart
#see different datasets available within a biomaRt:
mart = useMart('ensembl', host = "https://dec2021.archive.ensembl.org")
listDatasets(mart)
human = useMart(biomart="ensembl", dataset = "hsapiens_gene_ensembl", verbose = TRUE, host = "https://dec2021.archive.ensembl.org")
require(biomaRt)
library(biomaRt)
library(biomaRt)
